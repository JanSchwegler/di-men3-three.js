import"./modulepreload-polyfill-B5Qt9EMX.js";import{S,W as y,P as v,q as b,r as R,s as B,g as D,B as P,t as T,e as x,T as L,u as G,M as W,v as z,w as E,x as H,y as K,z as F,H as N,I as U,J as j,a as k,p as q}from"./three.module-DxaTYix-.js";import{S as A,O as I}from"./OrbitControls-DoAQgh4R.js";import{g as J}from"./lil-gui.module.min-Bc0DeA9g.js";function Q(){const r=document.querySelector("#canvas");if(!r){console.error("Canvas element not found.");return}const c=new S,m=new y({antialias:!0,canvas:r}),l=new v(55,r.clientWidth/r.clientHeight,.5,10);l.position.set(0,0,5);let d;d=new A,document.body.appendChild(d.dom);const o=new I(l,m.domElement);o.enableDamping=!0,o.dampingFactor=.05,o.enablePan=!1,o.minDistance=1,o.maxDistance=8;const h=new J;let e={lightBrightness:1,shape:"TorusKnot",shapeOptions:{TorusKnot:[],Sphere:[],Box:[],Cone:[],Cylinder:[],Torus:[],Dodecahedron:[]},material:"Basic",materialOptions:{Basic:["color","wireframe"],Lambert:["color","emissive","flatShading","wireframe"],Phong:["color","emissive","specular","shininess","flatShading","wireframe"],Toon:["color","emissive","flatShading","wireframe"],Standard:["color","emissive","metalness","roughness","flatShading","wireframe"],Physical:["color","emissive","metalness","roughness","clearcoat","clearcoatRoughness","flatShading","wireframe"],Matcap:["color","flatShading","wireframe"],Depth:["wireframe"],Normal:["flatShading","wireframe"]},color:"#66ffcc",emissive:"#000000",specular:"#111111",shininess:30,metalness:0,roughness:0,clearcoat:1,clearcoatRoughness:0,flatShading:!1,wireframe:!1,resetOrbit:function(){o.reset()}};function u(n){w(),n.slice(1).forEach(s=>{s==="color"&&t.addColor(e,s).name("Color").onChange(i),s==="emissive"&&t.addColor(e,s).name("Emissive").onChange(i),s==="specular"&&t.addColor(e,s).name("Specular").onChange(i),s==="shininess"&&t.add(e,s,1,100,1).name("Shininess").onChange(i),s==="metalness"&&t.add(e,s,0,1,.01).name("Metalness").onChange(i),s==="roughness"&&t.add(e,s,0,1,.01).name("Roughness").onChange(i),s==="clearcoat"&&t.add(e,s,0,1,.01).name("Clearcoat").onChange(i),s==="clearcoatRoughness"&&t.add(e,s,0,1,.01).name("Clearcoat Roughness").onChange(i),s==="flatShading"&&t.add(e,s).name("Flat Shading").onChange(i),s==="wireframe"&&t.add(e,s).name("Wireframe").onChange(i)})}function w(){for(let n=t.controllers.length-1;n>=0;n--)t.controllers[n].destroy()}function i(){a.material.color&&a.material.color.set(e.color),a.material.emissive&&a.material.emissive.set(e.emissive),a.material.specular&&a.material.specular.set(e.specular),a.material.shininess!==void 0&&(a.material.shininess=e.shininess),a.material.metalness!==void 0&&(a.material.metalness=e.metalness),a.material.roughness!==void 0&&(a.material.roughness=e.roughness),a.material.clearcoat!==void 0&&(a.material.clearcoat=e.clearcoat),a.material.clearcoatRoughness!==void 0&&(a.material.clearcoatRoughness=e.clearcoatRoughness),a.material.flatShading!==void 0&&(a.material.flatShading=e.flatShading),a.material.wireframe!==void 0&&(a.material.wireframe=e.wireframe),a.material.needsUpdate=!0}h.add(e,"shape",e.shapeOptions).name("Shape").onChange(n=>{console.log(n),a.geometry.dispose(),a.geometry=n[0],a.needsUpdate=!0}),h.add(e,"material",e.materialOptions).name("Material").onChange(n=>{a.material=n[0],i(),u(n),a.material.flatShading=e.flatShading,a.material.needsUpdate=!0});const t=h.addFolder("Material Options");h.add(e,"lightBrightness",0,3,.1).name("Light Brightness").onChange(n=>{f.intensity=n}),h.add(e,"resetOrbit").name("Reset Orbit");const f=new b(16777215,e.lightBrightness);f.position.set(1,1,1),c.add(f);const M=new R(16777215,.01);c.add(M),e.shapeOptions.TorusKnot.push(new B(1,.3,48,16)),e.shapeOptions.Sphere.push(new D(1,16,8)),e.shapeOptions.Box.push(new P(2,2,2)),e.shapeOptions.Cone.push(new T(1,2,16)),e.shapeOptions.Cylinder.push(new x(1,1,2,16)),e.shapeOptions.Torus.push(new L(1,.3,16,100)),e.shapeOptions.Dodecahedron.push(new G(1.2)),e.materialOptions.Basic.unshift(new W({color:e.color})),e.materialOptions.Lambert.unshift(new z({color:e.color})),e.materialOptions.Phong.unshift(new E({color:e.color})),e.materialOptions.Toon.unshift(new H({color:e.color})),e.materialOptions.Standard.unshift(new K({color:e.color})),e.materialOptions.Physical.unshift(new F({color:e.color})),e.materialOptions.Matcap.unshift(new N({color:e.color})),e.materialOptions.Depth.unshift(new U),e.materialOptions.Normal.unshift(new j);let a=new k(e.shapeOptions[e.shape][0],e.materialOptions[e.material][0]);u(e.materialOptions[e.material]),c.add(a);const O=new q;m.setAnimationLoop(C);function C(){O.getDelta(),d.update(),o.update(),m.render(c,l)}window.addEventListener("resize",g,!1),g();function g(){const n=Math.min(window.devicePixelRatio,2),s=Math.round(r.clientWidth*n),p=Math.round(r.clientHeight*n);m.setSize(s,p,!1),r.width=s,r.height=p,l.aspect=r.clientWidth/r.clientHeight,l.updateProjectionMatrix()}}Q();
